/**
 * Main CSS Entry Point
 * Tiny Fish Catch - Mobile-First HTML5 Canvas Game
 * Optimized for performance and touch interfaces
 */

/* === IMPORTS === */
@import './variables.css';
@import './mobile.css';

/* === CSS RESET & NORMALIZE === */

/* Modern CSS Reset */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  /* Improve text rendering */
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;

  /* Smooth scrolling */
  scroll-behavior: smooth;

  /* Base font size for rem calculations */
  font-size: 16px;

  /* Prevent iOS zoom on orientation change */
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  /* Typography */
  font-family: var(--font-primary);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-normal);
  line-height: var(--line-height-normal);
  color: var(--color-gray-900);

  /* Layout */
  min-height: 100vh;
  margin: 0;
  padding: 0;

  /* Performance */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  /* Background */
  background: var(--color-water);

  /* Mobile optimizations */
  overflow-x: hidden;
  position: relative;
}

/* === TYPOGRAPHY === */

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
  margin: 0;
}

h1 {
  font-size: var(--font-size-4xl);
}
h2 {
  font-size: var(--font-size-3xl);
}
h3 {
  font-size: var(--font-size-2xl);
}
h4 {
  font-size: var(--font-size-xl);
}
h5 {
  font-size: var(--font-size-lg);
}
h6 {
  font-size: var(--font-size-base);
}

p {
  margin: 0;
  line-height: var(--line-height-normal);
}

/* === INTERACTIVE ELEMENTS === */

button {
  /* Reset */
  appearance: none;
  background: none;
  border: none;
  cursor: pointer;
  font: inherit;

  /* Base styles */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  transition: all var(--duration-fast) var(--ease-out);

  /* Touch optimization */
  min-height: var(--touch-target-min);
  min-width: var(--touch-target-min);
  -webkit-tap-highlight-color: transparent;
}

button:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

/* === ACCESSIBILITY === */

/* Screen reader only content */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Focus visible for better keyboard navigation */
.focus-visible {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

/* Reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* === UTILITY CLASSES === */

/* Flexbox utilities */
.flex {
  display: flex;
}
.flex-col {
  flex-direction: column;
}
.flex-row {
  flex-direction: row;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}

/* Spacing utilities */
.p-0 {
  padding: var(--space-0);
}
.p-1 {
  padding: var(--space-1);
}
.p-2 {
  padding: var(--space-2);
}
.p-3 {
  padding: var(--space-3);
}
.p-4 {
  padding: var(--space-4);
}
.p-6 {
  padding: var(--space-6);
}

.m-0 {
  margin: var(--space-0);
}
.m-1 {
  margin: var(--space-1);
}
.m-2 {
  margin: var(--space-2);
}
.m-3 {
  margin: var(--space-3);
}
.m-4 {
  margin: var(--space-4);
}
.m-6 {
  margin: var(--space-6);
}

/* Text utilities */
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}

.font-bold {
  font-weight: var(--font-weight-bold);
}
.font-medium {
  font-weight: var(--font-weight-medium);
}
.font-normal {
  font-weight: var(--font-weight-normal);
}

/* Color utilities */
.text-white {
  color: var(--color-white);
}
.text-primary {
  color: var(--color-primary);
}
.text-gray-600 {
  color: var(--color-gray-600);
}

/* Border utilities */
.rounded {
  border-radius: var(--border-radius-md);
}
.rounded-lg {
  border-radius: var(--border-radius-lg);
}
.rounded-full {
  border-radius: var(--border-radius-full);
}

/* Shadow utilities */
.shadow {
  box-shadow: var(--shadow-md);
}
.shadow-lg {
  box-shadow: var(--shadow-lg);
}

/* === ANIMATION CLASSES === */

/* Fade animations */
.fade-in {
  animation: fadeIn var(--duration-normal) var(--ease-out);
}

.fade-out {
  animation: fadeOut var(--duration-normal) var(--ease-out);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Slide animations */
.slide-up {
  animation: slideUp var(--duration-normal) var(--ease-out);
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Pulse animation for loading states */
.pulse {
  animation: pulse var(--duration-slow) ease-in-out infinite;
}

@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* === GAME-SPECIFIC STYLES === */

/* Hidden state for elements that are revealed by JavaScript */
.js-hidden {
  display: none;
}

/* Loading states */
.loading {
  position: relative;
  overflow: hidden;
}

.loading::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  animation: shimmer var(--duration-slow) ease-in-out infinite;
}

@keyframes shimmer {
  100% {
    left: 100%;
  }
}

/* === PRINT STYLES === */

@media print {
  .fish-game-container {
    display: none;
  }

  body {
    background: white;
    color: black;
  }
}

/* === HIGH CONTRAST MODE === */

@media (prefers-contrast: high) {
  body {
    background: var(--color-white);
    color: var(--color-black);
  }

  .fish-game-container {
    border: var(--border-width-thick) solid var(--color-black);
  }
}

/* === DARK MODE === */

@media (prefers-color-scheme: dark) {
  body {
    background: var(--color-gray-900);
    color: var(--color-gray-100);
  }
}
